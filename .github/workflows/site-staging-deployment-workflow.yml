name: site-staging-deployment
'on':
  push:
    branches:
      - develop
  workflow_dispatch: { }
concurrency:
  group: 'site-staging-deployment-${{ github.ref }}'
  cancel-in-progress: true
jobs:
  prod-deploy:
    env:
      GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      # #############################
      # ###### NGINX ################
      # #############################
      - name: Install Nginx App Server
        uses: garygrossgarten/github-action-ssh@0.7.0
        with:
          host: '${{ secrets.DEPLOY_SERVER_HOST }}'
          username: '${{ secrets.DEPLOY_SERVER_SSH_USERNAME }}'
          password: '${{ secrets.DEPLOY_SERVER_SSH_PASSWORD }}'
          command: |
            sudo apt install -y nginx
            rm /etc/nginx/nginx.conf
            rm /etc/nginx/sites-available/default
            rm /etc/nginx/sites-enabled/default
            
            # setup ssl certificate and key
            mkdir /etc/nginx/ssl
            
            cat > /etc/nginx/ssl/site-ssl.pem << EOF
            ${{ secrets.DEPLOY_SERVER_SSL_CERT }}
            EOF
            
            openssl rsa -in /etc/nginx/ssl/site-ssl.pem -out /etc/nginx/ssl/nginx.key
      - name: Set Nginx Application Configuration
        uses: TwanLuttik/gh-action-scp@1.0.1
        with:
          local: deployment/nginx/nginx.conf
          remote: /etc/nginx/nginx.conf
          host: '${{ secrets.DEPLOY_SERVER_HOST }}'
          username: '${{ secrets.DEPLOY_SERVER_SSH_USERNAME }}'
          password: '${{ secrets.DEPLOY_SERVER_SSH_PASSWORD }}'
      - name: Set Nginx Server Configuration (Frontend)
        uses: TwanLuttik/gh-action-scp@1.0.1
        with:
          local: deployment/nginx/site-frontend
          remote: /etc/nginx/sites-available/site-frontend
          host: '${{ secrets.DEPLOY_SERVER_HOST }}'
          username: '${{ secrets.DEPLOY_SERVER_SSH_USERNAME }}'
          password: '${{ secrets.DEPLOY_SERVER_SSH_PASSWORD }}'
      - name: Set Nginx Server Configuration (Frontend Staging)
        uses: TwanLuttik/gh-action-scp@1.0.1
        with:
          local: deployment/nginx/site-frontend-staging
          remote: /etc/nginx/sites-available/site-frontend-staging
          host: '${{ secrets.DEPLOY_SERVER_HOST }}'
          username: '${{ secrets.DEPLOY_SERVER_SSH_USERNAME }}'
          password: '${{ secrets.DEPLOY_SERVER_SSH_PASSWORD }}'
      - name: Start Nginx App Server
        uses: garygrossgarten/github-action-ssh@0.7.0
        with:
          host: '${{ secrets.DEPLOY_SERVER_HOST }}'
          username: '${{ secrets.DEPLOY_SERVER_SSH_USERNAME }}'
          password: '${{ secrets.DEPLOY_SERVER_SSH_PASSWORD }}'
          command: |
            ln -s /etc/nginx/sites-available/site-frontend /etc/nginx/sites-enabled/site-frontend
            ln -s /etc/nginx/sites-available/site-frontend-staging /etc/nginx/sites-enabled/site-frontend-staging
            sudo service nginx restart
      # #############################
      # ###### FIREWALL #############
      # #############################
      - name: Setup Firewall
        uses: garygrossgarten/github-action-ssh@0.7.0
        with:
          host: '${{ secrets.DEPLOY_SERVER_HOST }}'
          username: '${{ secrets.DEPLOY_SERVER_SSH_USERNAME }}'
          password: '${{ secrets.DEPLOY_SERVER_SSH_PASSWORD }}'
          command: |
            echo 'y' | sudo ufw enable
            sudo ufw allow 'OpenSSH'
            sudo ufw allow 'Nginx HTTPS'
            sudo ufw default deny incoming
            sudo ufw default allow outgoing
            sudo ufw status verbose
      # #############################
      # ###### APPLICATION ##########
      # #############################
      - name: Maintenance Mode Enabled
        if: ${{ vars.MAINTENANCE_MODE_ENABLED == 'true' }}
        uses: TwanLuttik/gh-action-scp@1.0.1
        with:
          local: deployment/nginx/maintenance_on.html
          remote: /usr/share/nginx/html/maintenance_on.html
          host: '${{ secrets.DEPLOY_SERVER_HOST }}'
          username: '${{ secrets.DEPLOY_SERVER_SSH_USERNAME }}'
          password: '${{ secrets.DEPLOY_SERVER_SSH_PASSWORD }}'
      - name: Maintenance Mode Disabled
        if: ${{ vars.DISABLE_MAINTENANCE_MODE == 'true' }}
        uses: garygrossgarten/github-action-ssh@0.7.0
        with:
          host: '${{ secrets.DEPLOY_SERVER_HOST }}'
          username: '${{ secrets.DEPLOY_SERVER_SSH_USERNAME }}'
          password: '${{ secrets.DEPLOY_SERVER_SSH_PASSWORD }}'
          command: |
            rm /usr/share/nginx/html/maintenance_on.html
      - name: Install Application
        uses: garygrossgarten/github-action-ssh@0.7.0
        with:
          host: '${{ secrets.DEPLOY_SERVER_HOST }}'
          username: '${{ secrets.DEPLOY_SERVER_SSH_USERNAME }}'
          password: '${{ secrets.DEPLOY_SERVER_SSH_PASSWORD }}'
          command: |
            # verify app directory
            rm -rf /app-staging
            mkdir /app-staging
            
            # re-clone repo
            cd /app-staging
            git clone --branch develop https://github.com/Kreem97/the-vending-spot.git
            
            # re-setup node cli
            cd /app-staging/the-vending-spot/deployment/nodejs
            
            xz -d -v node-v18.17.1-linux-x64.tar.xz
            tar -xf node-v18.17.1-linux-x64.tar

            # re-set frontend environment variables
            cat > /app-staging/the-vending-spot/frontend/.env << 'EOF'
            VITE_EMAILJS_SERVICE_ID=${{ secrets.VITE_EMAILJS_SERVICE_ID }}
            VITE_EMAILJS_PUBLIC_KEY=${{ secrets.VITE_EMAILJS_PUBLIC_KEY }}
            VITE_EMAILJS_REQUEST_FORM_TEMPLATE_ID=${{ secrets.VITE_EMAILJS_REQUEST_FORM_TEMPLATE_ID }}
            VITE_EMAILJS_CONTACT_FORM_TEMPLATE_ID=${{ secrets.VITE_EMAILJS_CONTACT_FORM_TEMPLATE_ID }}
            EOF
            
            # npm install
            cd /app/the-vending-spot/frontend
            NODE_ENV=production /app-staging/the-vending-spot/deployment/nodejs/node-v18.17.1-linux-x64/lib/node_modules/npm/bin/npm-cli.js install
            /app-staging/the-vending-spot/deployment/nodejs/node-v18.17.1-linux-x64/lib/node_modules/npm/bin/npm-cli.js run build
